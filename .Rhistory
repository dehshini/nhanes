sw = starwars %>%
select(name, height, mass, gender) %>%
rename(weight = mass) %>%
na.omit() %>%
mutate(height = height / 100) %>%
filter(sex %in% c("male", "female")) %>%
mutate(sex = recode(sex, male = "m", female = "f")) %>%
mutate(size = height > 1 & weight > 75,
size = if_else(size, "large", "small"))
rlang::last_trace()
rlang::last_trace(drop = FALSE)
data()
?starwars
dim(starwars)
dim(starwars)
library(haven)
class621 <- read_dta("Desktop/datasets/2017class621.dta")
View(class621)
class621 = class621 %>%
mutate(exhrs3=recode(exhrs, "14 or more hours" = "4+", "8-13" = "4+", "4-7"="4+"))
table(class621)
dim(class621)
head(class621)
table(class621$exhrs)
class621 <- read.csv("~/Desktop/datasets/2017class621.csv")
View(class621)
table(class621$exhrs)
class621 = class621 %>%
mutate(exhrs3=recode(exhrs, "14 or more hours" = "4+", "8-13" = "4+", "4-7"="4+"))
table(class621$exhrs)
table(class621$exhrs3)
boxplot(bmi~exhrs3, data=class621)
class621 = class621 %>%
mutate(bmi=(weight/height^2)*704.5)
boxplot(bmi~exhrs3, data=class621)
summary(class621, mean=mean(bmi, na.rm=TRUE), sd=sd(bmi, na.rm=TRUE), obs=n())
class621 %>%
group_by(exhrs3) %>%
summary(class621, mean=mean(bmi, na.rm=TRUE), sd=sd(bmi, na.rm=TRUE), obs=n())
class621 %>%
group_by(exhrs3) %>%
summarize(class621, mean=mean(bmi, na.rm=TRUE), sd=sd(bmi, na.rm=TRUE), obs=n())
class621 %>%
group_by(exhrs3) %>%
summarize(class621, mean=mean(bmi, na.rm=TRUE), sd=sd(bmi, na.rm=TRUE), obs=n())
model1 = lm(bmi~exhrs3, data=class621, na.rm=TRUE)
model1 = lm(bmi~exhrs3, data=class621, na.action = na.omit)
coefficients(model1)
anova(model1)
summary(model1)
install.packages("survey")
library(survey)
#do a linear combination of coefficients
svycontrast(model1, c("exhrs32-3"=-1, "exhrs34+"=1))
#do a linear combination of coefficients
ccc = svycontrast(model1, c("exhrs32-3"=-1, "exhrs34+"=1))
confint(ccc)
Data <- read.csv("~/Desktop/Dataset for activity 2.csv")
View(Data)
# count the number of patients
summarize(data$patient_id, n())
# count the number of patients
summarize(data, n())
# count the number of patients
summarize(Data, n())
table(Data)
names(Data)
unique(Data)
unique(Data$patient_id)
unique(n(Data$patient_id))
unique(Data$patient_id) %>% n()
number_of_patients = unique(Data$patient_id)
length(number_of_patients)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit = lm(y~x)
summary(fit)
library(UsingR)
head(mtcars)
mt = mtcars
names(mt)
fit2 = lm(mt$wt~mt$mpg)
m = mean(mt$wt)
summary(fit2)
?confint
confint(fit2, parm = wt)
confint(fit2, parm = mt$wt)
confint(fit2, parm = mt$wt, na.rm=TRUE)
confint(fit2)
anova(fit2)
?mtcars
?predict()
?predict.lm
predict(fit2)
newx = c(m)
predict(fit2, newdata = newx, interval = "confidence")
newx = data.frame(c1=mean(x))
predict(fit2, newdata = newx, interval = "confidence")
mycars = mtcars
x = mycars$wt
y = mycars$mpg
fit = lm(y~x)
predict(fit1, newdata = newx, interval = "confidence")
predict(fit, newdata = newx, interval = "confidence")
predict(fit$x, newdata = newx, interval = "confidence")
predict(fit, newdata = newx, interval = "prediction")
anova(fit)
summary(fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit1 = lm(y~x)
summary(fit1)
a = mtcars$wt
b = mtcars$mpg
fit2 = lm(b~a)
confint(fit2, level = 0.95, parm = "a")
summary(fit2)
c = 3
confint(fit2, level = 0.95, parm = "c")
confint(fit2, level = 0.95, parm = c)
?confint.lm
confint(fit2, level = 0.95)
fit2$coefficients[1]
c = fit2$coefficients[[1]]+fit2$coefficients[[2]]*3
confint(fit2, level = 0.95, parm = c)
confint(fit2, level = 0.95, parm = 21.25)
c <- c(c)
vec <- c(c)
confint(fit2, level = 0.95, parm = vec)
d = 2*fit2$coefficients[[2]]
d
confint(fit2, level = 0.95, parm = a)
confint(fit2, level = 0.95, parm = "a")
confint(fit2, level = 0.95, parm = "intercept")
confint(fit2, level = 0.95, parm = "(intercept)")
confint(fit2, level = 0.95, parm = mean(a))
confint(fit2, level = 0.95, parm = "a")
a1 = a+mean(a)
a1
fitcentered = lm(b~a1)
summary(fitcentered)
mean(a)
?predict()
anova(fit2)
sum((b-mean(b)^2)
)
sum((b-mean(b))^2)
278.32/1126.047
install.packages("verification")
library(verification)
x <- c(12
28
x <- c(12,28,64,89)
y <- c(469,263,46,14
)
data = data.frame(x,y)
View(data)
names(data)=c("yes", "no")
roc.plot(data$yes, data$no)
install.packages("plotROC")
roc.plot(data$yes, data$no)
library(plotROC)
library(tidyverse)
rocplot <- ggplot(data = data, aes(x=no, y=yes)) + geom_roc(n.cuts=20,labels=FALSE)
View(rocplot)
rocplot + style_roc(theme = theme_grey) + geom_rocci(fill="pink")
rocplot
View(rocplot)
g = rocplot
g
library(car)
library(tidyverse)
par(mfrow = c(2,2))
View(g)
lm(y~x)
slm = lm(y~x)
plot(slm, which = 1)
View(cars)
sw = read_csv("starwars")
sw = read_csv(starwars)
library(UsingR)
library(UsingR)
sw = read_csv(starwars)
sw = read_csv('starwars')
load(starwars)
sw = starwars
head(sw)
slm = lm(sw$height~sw$mass)
par(mfrow=c(2,2))
plot(slm, which = 1)
qqplot(residuals(slm), main=expression("normal q-q"))
plot(slm, which = c(3, 5))
View(sw)
boxplot(residuals(slm))
par(mfrow=c(1,1))
boxplot(residuals(slm))
qqplot(y=residuals(slm), main=expression("normal q-q"))
plot(slm, which = 2)
require(car)
x = sw$mass
y = sw$height
QQplot(x, y)
x = x %>%
mutate(filter(is.na==FALSE))
x = x %>% filter(is.na==FALSE)
sw = sw %>% na.omit()
x = sw$mass
y = sw$height
QQplot(x, y)
qqPlot(x, y)
data=data.frame(x,y)
qqPlot(x, y, data)
lm(y~x)
model=lm(y~x)
qqPlot(model)
plot(slm, which = 2)
plot(slm, which = 3)
plot(slm, which = 4)
plot(slm, which = 5)
shapiro.test(residuals(slm))
plot(slm, which = 3)
plot(slm, which = 5)
library(tidyverse)
coefficients(model)
library(tidyverse)
library(UsingR)
mt = mtcars
head(mt)
model1 = lm(mpg~cyl+wt)
model1 = lm(mpg~cyl+wt, data=mt)
summary(model1)
?predict()
4*[[coef(2)]]
coef(2)
model1$coefficients[2]
model1$coefficients[[2]]
model1$coefficients[[2]] * 4
model2 = lm(mpg~cyl, data=mt)
summary(model2)
model3 = lm(mpg~cyl*wt, data=mt)
model3 = lm(mpg~as.factor(cyl)*wt, data=mt)
summary(model1)
summary(model2)
summary(model3)
model2 = lm(mpg~as.factor(cyl), data=mt)
summary(model2)
model1 = lm(mpg~as.factor(cyl)+wt, data=mt)
summary(model1)
anova(model1, model3)
model4 = lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(model4)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
model5=lm(y~x)
plot(model5)
dfbeta(model5)
summary(model1)
summary(model2)
model4 = lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(model4)
plot(model4)
summary(model2)
hatvalues(model5)#[1:10]
dfbeta(model5)[1:10]
dfbeta(model5)
dfbeta(model5)[5]
hatvalues(model5)
plot(model5)
dfbeta(model5)
dfbeta(model5, n=5)
dfbeta(model5, n=3)
hatvalues(model5)
dffits(model5)
influence.measures(model5)
summary(model4)
summary(model1)
?I
?lspline
view(mt)
view(starwars)
st = starwars
nicho = starwars
nicho %>% mutate(happiness=filter(eye_color="blue"))
nicho %>% mutate(st, happiness=filter(eye_color="blue"))
?UsingR::
?UsingR
View(data)
View(data)
View(mt)
avPlot(model1)
pairs(~x+y, data=data)
View(sw)
pairs(~height+mass+sex, data=sw)
pairs(~height+mass+birth_year, data=sw)
pairs(~height+mass+birth_year, data=sw, upper.panel=NULL)
pairs(~height+mass+birth_year, data=sw)
pairs(~height+mass+birth_year, data=sw, upper.panel=NULL)
library(devtools)
devtools::install_github("jhudsl/collegeIncome")
library(collegeIncome)
data(college)
View(college)
head(college)
devtools::install_github("jhudsl/matahari")
library(matahari)
dance_start(value = FALSE, contents = FALSE)
data("mtcars")
force(mtcars)
install.packages("httpgd")
library(plyr)
detach("package:plyr", unload = TRUE)
install.packages("jsonlite")
install.packages("XML")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data("airquality")
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?splom()
install.packages("TSstudio")
install.packages("ggsurvfit")
?require
install.packages("PredictABEL")
library(BlandAltmanLeh)
#LOAD THE REQUIRED PACKAGES
library(dplyr)
library(tidyverse)
library(haven)
library(janitor)
library(survival)
library(survminer)
library(gtsummary)
library(haven)
X2024_Epi753_Lab6_widetime <- read_dta("Library/CloudStorage/OneDrive-JohnsHopkins/JHU/3rd Term/Epi Methods 3/week6timetoevent/Lab6_DiscreteTimeAnalysis/2024_Epi753_Lab6_widetime.dta")
View(X2024_Epi753_Lab6_widetime)
library(haven)
Lab6 <- read_dta("Library/CloudStorage/OneDrive-JohnsHopkins/JHU/3rd Term/Epi Methods 3/week6timetoevent/Lab6_DiscreteTimeAnalysis/2024_Epi753_Lab6_widetime.dta")
View(Lab6)
Lab6 %>%
filter(death==1) %>%
summarise()
Lab6 %>%
filter(death==1) %>%
summarise()
Lab6 %>%
filter(death==1) %>%
summarise(
n = n()
)
#LOAD THE REQUIRED PACKAGES
library(dplyr)
library(tidyverse)
library(haven)
library(janitor)
library(survival)
library(survminer)
library(gtsummary)
library(haven)
Lab6 <- read_dta("Library/CloudStorage/OneDrive-JohnsHopkins/JHU/3rd Term/Epi Methods 3/week6timetoevent/Lab6_DiscreteTimeAnalysis/2024_Epi753_Lab6_widetime.dta")
View(Lab6)
Lab6 %>% filter(time0==1) %>% nrow()
Lab6 %>% filter(time0!=1) %>% nrow()
Lab6 %>% filter(time0==NA) %>% nrow()
Lab6 %>% filter(time0==1) %>% nrow()
Lab6 %>% filter(time0==1) %>% summarise(obs=n())
library(haven)
Lab7 <- read_dta("Library/CloudStorage/OneDrive-JohnsHopkins/JHU/3rd Term/Epi Methods 3/week6timetoevent/Lab7_ContinuousSurvivalAnalysis/2024_Epi753_Lab7.dta")
View(Lab7)
library(tidyverse)
library(janitor)
n_distinct(Lab7)
n_distinct(Lab7$studyid)
n.occur <- data.frame(table(Lab7$studyid))
View(n.occur)
install.packages(c("processx", "sass", "tinytex"))
library(data.table)
install.packages("benchmarkme")
library(benchmarkme)
version()
version
get_ram()
get_cpu()
data("sample_results")
plot(sample_results, blas_optimize = NULL)
# (2) calculate the following equation: 30 plus 15 plus 5, then multiply by 20, subtract by 500, and finally divide by 25 (all in one line)
((30 + 15 + 5) * 20 - 500) / 25
# (1) calculate the following equation: 12 plus 8 plus 20, then divide by 10 all in one line)
(12 + 8 + 20) / 10
# (3) find rounded (5 decimals), floor, and ceiling of: 1.0005678
round(1.0005678, 5)
floor(1.0005678)
ceiling(1.0005678)
install.packages("lcmm")
install.packages(c("backports", "BiocManager", "brio", "broom", "broom.helpers", "bslib", "cachem", "callr", "cli", "cmprsk", "codetools", "correlation", "crayon", "data.table", "datamods", "datawizard", "DBI", "dbplyr", "digest", "downlit", "effectsize", "emmeans", "esquisse", "estimability", "evaluate", "farver", "fastmap", "fdapace", "fields", "fixest", "flextable", "fmtr", "forecast", "foreign", "fs", "future", "future.apply", "ggfortify", "ggplot2", "ggsci", "ggstats", "ggstatsplot", "ggsurvfit", "gh", "gt", "gtable", "hardhat", "highr", "Hmisc", "htmltools", "httpgd", "httpuv", "httr2", "infer", "insight", "KernSmooth", "knitr", "labelled", "lattice", "lhs", "lincom", "lintr", "lme4", "locfit", "markdown", "matrixStats", "mclust", "metafor", "minqa", "modeldata", "munsell", "mvtnorm", "nlme", "nloptr", "officer", "openssl", "parameters", "parsnip", "pbkrtest", "performance", "phosphoricons", "pkgbuild", "pkgdown", "pkgload", "prismatic", "processx", "prodlim", "promises", "ps", "psych", "qpdf", "quantreg", "ragg", "RcppArmadillo", "RCurl", "reactR", "recipes", "remotes", "repr", "reprex", "rio", "rlang", "rmarkdown", "robustbase", "roxygen2", "rsample", "rspiro", "RSQLite", "rstudioapi", "shiny", "shinyWidgets", "signal", "sjmisc", "sjstats", "sp", "SparseM", "statsExpressions", "stringi", "stringmagic", "styler", "survey", "survival", "systemfonts", "testthat", "textshaping", "tidymodels", "tinytex", "tseries", "tsibble", "tune", "ucminf", "unigd", "urca", "workflowsets", "xfun", "XML", "xopen", "xts", "yaml", "yardstick"))
install.packages(c("correlation", "datawizard", "effectsize", "emmeans", "fixest", "ggstatsplot", "hardhat", "parameters", "performance", "pkgdown", "RcppArmadillo", "RCurl", "reactR", "recipes", "rio", "statsExpressions"))
install.packages(c("correlation", "datawizard", "effectsize", "emmeans", "fixest", "ggstatsplot", "hardhat", "parameters", "performance", "pkgdown", "RcppArmadillo", "RCurl", "reactR", "recipes", "rio", "statsExpressions"))
load("~/Library/CloudStorage/OneDrive-JohnsHopkins/work/cholera/kano_ward.RData")
View(ward_place_2017)
View(regress_data2)
library(haven)
wash <- read_sav("/Users/dehshini/Library/CloudStorage/OneDrive-JohnsHopkins/ward/WaSH/WASH_FINAL_DATASET_2021/public_places_2021.sav")
library(tidyverse)
wash_data <- read_sav("/Users/dehshini/Library/CloudStorage/OneDrive-JohnsHopkins/ward/WaSH/WASH_FINAL_DATASET_2021/public_places_2021.sav")
wash_data <- read_sav("/Users/dehshini/Library/CloudStorage/OneDrive-JohnsHopkins/ward/WaSH/WASH_FINAL_DATASET_2021/public_places_2021.sav")
wash_data <- read_sav("/Users/dehshini/Library/CloudStorage/OneDrive-JohnsHopkins/ward/WaSH/WASH_FINAL_DATASET_2021/public_places_2021.sav")
View(wash_data)
names(wash_data)
wash_kano <- wash_data %>%
select(state == "Kano")
wash_kano <- wash_data %>%
select(state)
View(wash_kano)
wash_kano <- wash_data %>%
filter(state == "Kano")
View(wash_kano)
wash_kano <- wash_data %>%
filter(state == "Kano") %>%
select(q2, q3, state)
View(wash_kano)
wash_kano <- wash_data %>%
filter(state == "Kano") %>%
select(state, q2, q3)
View(wash_kano)
wash_kano <- wash_data %>%
filter(state == "Kano") %>%
select(state, q2, q3, b1, b2, b5)
View(wash_kano)
str(wash_kano)
View(wash_data)
wash_kano <- wash_data %>%
filter(state == "Kano") %>%
select(state, q2, q3, b1, b2, b5, longitude_e, latitude_n)
View(wash_kano)
wash_kano <- wash_data %>%
filter(state == "Kano") %>%
select(state, q2, q3, b1, b2, b5, market, park, longitude_e, latitude_n)
View(wash_kano)
n_distinct(wash_kano$q2)
str(wash_kano$q2)
??tidy
# load all data
setwd("/Users/dehshini/code/R/nhanes")
load("nhanes.RDATA")
library(tidyverse)
library(haven)
library(data.table)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE65, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMOKE, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH, SMOKE, DIAB_DUR, RETINOPATHY, ASCVD, HEART_FAIL, CKD, PIR
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{p}% ({p.std.error})",
DIAB_DUR ~ "{median} ({p25}, {p75})"
),
digits = list(
all_continuous() ~ c(2, 1),
all_categorical() ~ c(0, 1)
),
missing = "no",
missing_text = "Missing",
#missing_stat = "{N_obs}",
label = table1labels
)  %>%
modify_header(
all_stat_cols() ~ "**N = {N_unweighted}**"
) %>%
add_stat_label(
location = "column"
)
library(survey)
library(gtsummary)
library(transplantr)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE65, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMOKE, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH, SMOKE, DIAB_DUR, RETINOPATHY, ASCVD, HEART_FAIL, CKD, PIR
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{p}% ({p.std.error})",
DIAB_DUR ~ "{median} ({p25}, {p75})"
),
digits = list(
all_continuous() ~ c(2, 1),
all_categorical() ~ c(0, 1)
),
missing = "no",
missing_text = "Missing",
#missing_stat = "{N_obs}",
label = table1labels
)  %>%
modify_header(
all_stat_cols() ~ "**N = {N_unweighted}**"
) %>%
add_stat_label(
location = "column"
)
svymean(~high_srh, weighted_nhanes_all)
svymean(~RACE, weighted_nhanes_all)
svymean(~RACE, weighted_nhanes_all, na.rm = TRUE, deff = TRUE)
svyciprop(~RACE, weighted_nhanes_all, na.rm = TRUE, deff = TRUE)
svyciprop(~RACE, weighted_nhanes_all)
SE(svyciprop(~RACE, weighted_nhanes_all))
svyciprop(~RACE, weighted_nhanes_all)
load("~/code/R/nhanes/nhanes.RData")
