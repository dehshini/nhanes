# Join all dataframes by common columns (using full_join to preserve all rows and columns)
joined_data <- Reduce(function(x, y) full_join(x, y, by = "SEQN"), data_list)
# convert the joined data to a data table
setDT(joined_data)
# return the joined data
return(joined_data)
}
# Main directory containing NHANES cycle folders
main_directory <- "/Users/dehshini/code/R/nhanes/data"
# List all cycle folders
cycle_folders <- list.dirs(main_directory, full.names = TRUE, recursive = FALSE)
# Iterate through each cycle folder
for (cycle_folder in cycle_folders) {
# Extract the cycle name from the folder name
cycle_name <- basename(cycle_folder)
# Load data files in the current cycle folder
cycle_data <- load_data_files(cycle_folder)
# Save the cycle data to an object
assign(paste0("nhanes", cycle_name), cycle_data)
}
# create a list to hold the nhanes dataframes
nhanes_list <- list(nhanes01_02, nhanes03_04, nhanes05_06, nhanes07_08, nhanes09_10, nhanes11_12, nhanes13_14, nhanes15_16, nhanes17_18)
for (cycle in nhanes_list) {
# create new weights, 9 cycles
cycle[, WTMEC9YR := WTMEC2YR/9]
}
library(data.table)
library(survey)
library(gtsummary)
# DUPLICATE THE DATAFRAME LIST
nhanes_list2 <- nhanes_list
# bind all rows in nhanes list into one dataframe
nhanes_all <- rbindlist(nhanes_list2, fill = TRUE)
str(nhanes_all$WTMEC9YR)
head(nhanes_all$WTMEC9YR)
tail(nhanes_all$WTMEC9YR)
sum(is.na(nhanes_all$WTMEC9YR))
library(data.table)
library(survey)
library(gtsummary)
# DUPLICATE THE DATAFRAME LIST
nhanes_list2 <- nhanes_list
# bind all rows in nhanes list into one dataframe
nhanes_all <- rbindlist(nhanes_list2, fill = TRUE)
head(nhanes_all$WTMEC9YR)
tail(nhanes_all$WTMEC9YR)
# Define the breakpoints and labels for BMI categories
bmi_breaks <- c(-Inf, 18.5, 24.9, 29.9, Inf) # Breakpoints for categories
bmi_labels <- c("Underweight", "Normal", "Overweight", "Obese") # Corresponding labels
# Categorize BMI
nhanes_all[, BMICAT := cut(BMXBMI, breaks = bmi_breaks, labels = bmi_labels, right = FALSE)]
# calculate SBP and DBP
nhanes_all[, DBP := (BPXDI2 + BPXDI3) / 2]
nhanes_all[, SBP := (BPXSY2 + BPXSY3) / 2]
nhanes_all[, MARITAL := ifelse(DMDMARTL %in% c(1, 6), 1,
ifelse(DMDMARTL %in% c(2, 3, 4), 2,
ifelse(DMDMARTL == 5, 3, NA)))
]
# education level
# 1=less than high school, 2=high school/equivalent, 3=above high school/equivalent
nhanes_all[, EDULEVEL := ifelse(DMDEDUC2 %in% c(1, 2), 1,
ifelse(DMDEDUC2 == 3, 2,
ifelse(DMDEDUC2 %in% c(4, 5), 3, NA)))
]
#age >= 60
nhanes_all[, AGE60 := ifelse(RIDAGEYR >= 60, 1, 0)]
# race
# 1=white, 2=black, 3=mexican american, 4=other
nhanes_all[, RACE := ifelse(RIDRETH1 == 3, 1,
ifelse(RIDRETH1 == 4, 2,
ifelse(RIDRETH1 == 1, 3,
ifelse(RIDRETH1 %in% c(2, 5), 4, NA))))
]
weighted_nhanes_all <- svydesign(
id = ~SDMVPSU,
strata = ~SDMVSTRA,
weights = ~WTMEC9YR,
nest = TRUE,
data = nhanes_all
)
analyze1 <- subset(weighted_nhanes_all, RIDAGEYR >= 20 & DIQ010 == 1)
# create table label names
table1labels <- list(
RIDAGEYR ~ "Age",
AGE60 ~ "Age >= 60",
RIAGENDR ~ "Gender",
#RIDRETH1 ~ "Race",
#DMDEDUC2 ~ "Education",
#DMDMARTL ~ "Marital Status",
SMQ020 ~ "Smoked > 100 cigarettetes in life",
LBDTCSI ~ "Total Cholesterol",
LBDTRSI ~ "Triglycerides",
LBDLDLSI ~ "Low Density Lipoprotein Cholesterol",
BMXBMI ~ "Body Mass Index",
BMICAT ~ "Body Mass Index Category",
MARITAL ~ "Marital Status",
EDULEVEL ~ "Education Level",
RACE ~ "Race",
SBP ~ "Systolic Blood Pressure",
DBP ~ "Diastolic Blood Pressure",
#LBXGH ~ "Glycated Hemoglobin"
)
# create table label names
table1labels <- list(
RIDAGEYR ~ "Age",
AGE60 ~ "Age >= 60",
RIAGENDR ~ "Gender",
#RIDRETH1 ~ "Race",
#DMDEDUC2 ~ "Education",
#DMDMARTL ~ "Marital Status",
SMQ020 ~ "Smoked > 100 cigarettetes in life",
LBDTCSI ~ "Total Cholesterol",
LBDTRSI ~ "Triglycerides",
LBDLDLSI ~ "Low Density Lipoprotein Cholesterol",
BMXBMI ~ "Body Mass Index",
BMICAT ~ "Body Mass Index Category",
MARITAL ~ "Marital Status",
EDULEVEL ~ "Education Level",
RACE ~ "Race",
SBP ~ "Systolic Blood Pressure",
DBP ~ "Diastolic Blood Pressure"
#LBXGH ~ "Glycated Hemoglobin"
)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE60, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMQ020, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{n_unweighted} ({p}%)"
),
digits = list(
all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1)
),
missing = "no",
sort = list(everything() ~ "frequency"),
label = table1labels
)  %>%
modify_header(
list()
) %>%
add_ci()
str(nhanes_all$LBXGLT)
str(nhanes_all$LBXGLTSI)
str(nhanes_all$LBXGLUSI)
# Function to load data files from a directory
load_data_files <- function(directory) {
# List all files in the directory
files <- list.files(directory, full.names = TRUE)
# Load each file into a list
data_list <- lapply(files, read_xpt)
# Set names of the list elements to the filenames (without extension)
names(data_list) <- tools::file_path_sans_ext(basename(files))
# Join all dataframes by common columns (using full_join to preserve all rows and columns)
joined_data <- Reduce(function(x, y) full_join(x, y, by = "SEQN"), data_list)
# convert the joined data to a data table
setDT(joined_data)
# return the joined data
return(joined_data)
}
# Main directory containing NHANES cycle folders
main_directory <- "/Users/dehshini/code/R/nhanes/data"
# List all cycle folders
cycle_folders <- list.dirs(main_directory, full.names = TRUE, recursive = FALSE)
# Iterate through each cycle folder
for (cycle_folder in cycle_folders) {
# Extract the cycle name from the folder name
cycle_name <- basename(cycle_folder)
# Load data files in the current cycle folder
cycle_data <- load_data_files(cycle_folder)
# Save the cycle data to an object
assign(paste0("nhanes", cycle_name), cycle_data)
}
# create a list to hold the nhanes dataframes
nhanes_list <- list(nhanes01_02, nhanes03_04, nhanes05_06, nhanes07_08, nhanes09_10, nhanes11_12, nhanes13_14, nhanes15_16, nhanes17_18)
for (cycle in nhanes_list) {
# create new weights, 9 cycles
cycle[, WTMEC9YR := WTMEC2YR/9]
}
# DUPLICATE THE DATAFRAME LIST
nhanes_list2 <- nhanes_list
# bind all rows in nhanes list into one dataframe
nhanes_all <- rbindlist(nhanes_list2, fill = TRUE)
head(nhanes_all$WTMEC9YR)
tail(nhanes_all$WTMEC9YR)
# Define the breakpoints and labels for BMI categories
bmi_breaks <- c(-Inf, 18.5, 24.9, 29.9, Inf) # Breakpoints for categories
bmi_labels <- c("Underweight", "Normal", "Overweight", "Obese") # Corresponding labels
# Categorize BMI
nhanes_all[, BMICAT := cut(BMXBMI, breaks = bmi_breaks, labels = bmi_labels, right = FALSE)]
# calculate SBP and DBP
nhanes_all[, DBP := (BPXDI2 + BPXDI3) / 2]
nhanes_all[, SBP := (BPXSY2 + BPXSY3) / 2]
nhanes_all[, MARITAL := ifelse(DMDMARTL %in% c(1, 6), 1,
ifelse(DMDMARTL %in% c(2, 3, 4), 2,
ifelse(DMDMARTL == 5, 3, NA)))
]
# education level
# 1=less than high school, 2=high school/equivalent, 3=above high school/equivalent
nhanes_all[, EDULEVEL := ifelse(DMDEDUC2 %in% c(1, 2), 1,
ifelse(DMDEDUC2 == 3, 2,
ifelse(DMDEDUC2 %in% c(4, 5), 3, NA)))
]
#age >= 60
nhanes_all[, AGE60 := ifelse(RIDAGEYR >= 60, 1, 0)]
# race
# 1=white, 2=black, 3=mexican american, 4=other
nhanes_all[, RACE := ifelse(RIDRETH1 == 3, 1,
ifelse(RIDRETH1 == 4, 2,
ifelse(RIDRETH1 == 1, 3,
ifelse(RIDRETH1 %in% c(2, 5), 4, NA))))
]
weighted_nhanes_all <- svydesign(
id = ~SDMVPSU,
strata = ~SDMVSTRA,
weights = ~WTMEC9YR,
nest = TRUE,
data = nhanes_all
)
analyze1 <- subset(weighted_nhanes_all, RIDAGEYR >= 20 & DIQ010 == 1)
# create table label names
table1labels <- list(
RIDAGEYR ~ "Age",
AGE60 ~ "Age >= 60",
RIAGENDR ~ "Gender",
#RIDRETH1 ~ "Race",
#DMDEDUC2 ~ "Education",
#DMDMARTL ~ "Marital Status",
SMQ020 ~ "Smoked > 100 cigarettetes in life",
LBDTCSI ~ "Total Cholesterol",
LBDTRSI ~ "Triglycerides",
LBDLDLSI ~ "Low Density Lipoprotein Cholesterol",
BMXBMI ~ "Body Mass Index",
BMICAT ~ "Body Mass Index Category",
MARITAL ~ "Marital Status",
EDULEVEL ~ "Education Level",
RACE ~ "Race",
SBP ~ "Systolic Blood Pressure",
DBP ~ "Diastolic Blood Pressure"
#LBXGH ~ "Glycated Hemoglobin",
#LBXGLUSI ~ "Two hour Glucose (OGTT)"
#LBDGLUSI ~ "fasting glucose"
#
)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE60, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMQ020, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{n_unweighted} ({p}%)"
),
digits = list(
all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1)
),
missing = "no",
sort = list(everything() ~ "frequency"),
label = table1labels
)  %>%
modify_header(
list()
)
# create table label names
table1labels <- list(
RIDAGEYR ~ "Age",
AGE60 ~ "Age >= 60",
RIAGENDR ~ "Gender",
#RIDRETH1 ~ "Race",
#DMDEDUC2 ~ "Education",
#DMDMARTL ~ "Marital Status",
SMQ020 ~ "Smoked > 100 cigarettetes in life",
LBDTCSI ~ "Total Cholesterol",
LBDTRSI ~ "Triglycerides",
LBDLDLSI ~ "Low Density Lipoprotein Cholesterol",
BMXBMI ~ "Body Mass Index",
BMICAT ~ "Body Mass Index Category",
MARITAL ~ "Marital Status",
EDULEVEL ~ "Education Level",
RACE ~ "Race",
SBP ~ "Systolic Blood Pressure",
DBP ~ "Diastolic Blood Pressure",
LBXGH ~ "Glycated Hemoglobin"
#LBXGLUSI ~ "Two hour Glucose (OGTT)"
#LBDGLUSI ~ "fasting glucose"
#
)
# smoke
nhanes_all[, SMOKE := ifelse(SMQ020 == 1, 1,
ifelse(SMQ020 == 2, 0, NA))
]
# create table label names
table1labels <- list(
RIDAGEYR ~ "Age",
AGE60 ~ "Age >= 60",
RIAGENDR ~ "Gender",
#RIDRETH1 ~ "Race",
#DMDEDUC2 ~ "Education",
#DMDMARTL ~ "Marital Status",
#SMQ020 ~ "Smoked > 100 cigarettetes in life",
LBDTCSI ~ "Total Cholesterol",
LBDTRSI ~ "Triglycerides",
LBDLDLSI ~ "Low Density Lipoprotein Cholesterol",
BMXBMI ~ "Body Mass Index",
BMICAT ~ "Body Mass Index Category",
MARITAL ~ "Marital Status",
EDULEVEL ~ "Education Level",
RACE ~ "Race",
SBP ~ "Systolic Blood Pressure",
DBP ~ "Diastolic Blood Pressure",
LBXGH ~ "Glycated Hemoglobin",
#LBXGLUSI ~ "Two hour Glucose (OGTT)"
#LBDGLUSI ~ "fasting glucose",
SMOKE ~ "Smoked > 100 cigarettetes in life"
)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE60, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMOKE, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{n_unweighted} ({p}%)"
),
digits = list(
all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1)
),
missing = "no",
sort = list(everything() ~ "frequency"),
label = table1labels
)  %>%
modify_header(
list()
)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE60, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMOKE, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{n_unweighted} ({p}%)"
),
digits = list(
all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1)
),
missing = "no",
sort = list(everything() ~ "frequency"),
label = table1labels
)  %>%
modify_header(
list()
)
weighted_nhanes_all <- svydesign(
id = ~SDMVPSU,
strata = ~SDMVSTRA,
weights = ~WTMEC9YR,
nest = TRUE,
data = nhanes_all
)
analyze1 <- subset(weighted_nhanes_all, RIDAGEYR >= 20 & DIQ010 == 1)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE60, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMOKE, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{n_unweighted} ({p}%)"
),
digits = list(
all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1)
),
missing = "no",
sort = list(everything() ~ "frequency"),
label = table1labels
)  %>%
modify_header(
list()
)
save.image("~/code/R/nhanes/nhanes.RData")
# income poverty ratio
#
PIR_breaks <- c(-Inf, 0.99, 2.99, Inf)
PIR_labels <- c("< 1", "1 to <3", "3 or more")
nhanes_all[, PIR := cut(INDFMPIR, breaks = PIR_breaks, labels = PIR_labels, right = FALSE)]
# duration of diabetes
# get current age and subtract age of diabetes diagnosis
nhanes_all[, DIAB_DUR := RIDAGEYR - DID040]
# retinopathy
nhanes_all[, RETINOPATHY := ifelse(DIQ080 == 1, 1, 0)]
# CVD = stroke MCQ160f, heart attack MCQ160e, angina MCQ160d, coronary heart disease MCQ160c
nhanes_all[, CVD := ifelse(MCQ160F == 1 | MCQ160E == 1 | MCQ160D == 1 | MCQ160C == 1, 1, 0)]
weighted_nhanes_all <- svydesign(
id = ~SDMVPSU,
strata = ~SDMVSTRA,
weights = ~WTMEC9YR,
nest = TRUE,
data = nhanes_all
)
analyze1 <- subset(weighted_nhanes_all, RIDAGEYR >= 20 & DIQ010 == 1)
# create table label names
table1labels <- list(
RIDAGEYR ~ "Age",
AGE60 ~ "Age >= 60",
RIAGENDR ~ "Gender",
#RIDRETH1 ~ "Race",
#DMDEDUC2 ~ "Education",
#DMDMARTL ~ "Marital Status",
#SMQ020 ~ "Smoked > 100 cigarettetes in life",
LBDTCSI ~ "Total Cholesterol",
LBDTRSI ~ "Triglycerides",
LBDLDLSI ~ "Low Density Lipoprotein Cholesterol",
BMXBMI ~ "Body Mass Index",
BMICAT ~ "Body Mass Index Category",
MARITAL ~ "Marital Status",
EDULEVEL ~ "Education Level",
RACE ~ "Race",
SBP ~ "Systolic Blood Pressure",
DBP ~ "Diastolic Blood Pressure",
LBXGH ~ "Glycated Hemoglobin",
#LBXGLUSI ~ "Two hour Glucose (OGTT)"
#LBDGLUSI ~ "fasting glucose",
SMOKE ~ "Smoked > 100 cigarettetes in life",
DIAB_DUR ~ "Duration of Diabetes",
RETINOPATHY ~ "Retinopathy",
CVD ~ "CVD",
PIR ~ "Poverty Income Ratio"
)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE60, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMOKE, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH, SMOKE, DIAB_DUR, RETINOPATHY, CVD, PIR
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{n_unweighted} ({p}%)"
),
digits = list(
all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1)
),
missing = "no",
sort = list(everything() ~ "frequency"),
label = table1labels
)  %>%
modify_header(
list()
)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE60, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMOKE, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH, SMOKE, DIAB_DUR, RETINOPATHY, CVD, PIR
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{n_unweighted} ({p}%)"
),
digits = list(
all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1)
),
missing = "no",
#sort = list(everything() ~ "frequency"),
label = table1labels
)  %>%
modify_header(
list()
)
## create table
tbl_svysummary(
analyze1,
include = c(RIDAGEYR, AGE60, RIAGENDR, RACE, MARITAL, EDULEVEL,
SMOKE, LBDTCSI, LBDTRSI, LBDLDLSI, BMXBMI, BMICAT,
SBP, DBP, LBXGH, SMOKE, DIAB_DUR, RETINOPATHY, CVD, PIR
),
statistic = list(
all_continuous() ~ "{mean} ({mean.std.error})",
all_categorical() ~ "{n_unweighted} ({p}%)"
),
digits = list(
all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1)
),
missing = "no",
#sort = list(everything() ~ "frequency"),
label = table1labels
)  %>%
modify_header(
list()
) %>%
add_ci()
